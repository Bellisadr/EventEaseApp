# .github/workflows/deploy-blazor.yml
name: Deploy Blazor to GitHub Pages

on:
  push:
    branches:
      - main # Ou o nome da sua branch principal (ex: master)

  # Permite que você execute este workflow manualmente na aba Actions do GitHub
  workflow_dispatch:

# Permissões necessárias para o GitHub Actions
permissions:
  contents: read
  pages: write
  id-token: write

# Permite apenas uma implantação simultânea
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x" # Garanta que esta versão corresponde ao seu projeto (você usa .NET 9.0)

      - name: Restore Dependencies
        run: dotnet restore EventEaseApp.csproj # Ajuste se o nome do seu arquivo .csproj for diferente

      - name: Publish Blazor App
        run: dotnet publish EventEaseApp.csproj -c Release -o release --nologo # Ajuste o nome do .csproj
        # -c Release: Compila em modo de Release (otimizado)
        # -o release: Define a pasta de saída para 'release' (dentro da raiz do workflow)
        # --nologo: Suprime o banner de copyright do .NET SDK

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload GitHub Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: release/wwwroot # O caminho para os arquivos estáticos Blazor após a publicação

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
